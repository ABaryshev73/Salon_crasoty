
&НаКлиенте
Процедура ЗагрузитьПрайсЛист(Команда)
	СкопиоватьФайлНаСервер();
КонецПроцедуры

&НаКлиенте
Процедура СкопиоватьФайлНаСервер()

	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);	

КонецПроцедуры // СкопиоватьФайлНаСервер()

&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногофайла, ДополнительныеПараметр) Экспорт 

	Если ОписаниеПомещенногофайла <> Неопределено Тогда	
		АдресФайлаВХранилище = ОписаниеПомещенногофайла.Адрес;
		ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидыЦенПродажи);
	КонецЕсли;    
	//Оповестить("ДанныеЗаписаны");
КонецПроцедуры // СкопироватьФайлНаСерверЗавершение()


&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, ВидыЦенПродажи)
	
	ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок);
	
	Если ТаблицаПрайсЛиста.Количество() Тогда 
		ЗагрузитьПрасЛист(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидыЦенПродажи);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Прайс-лист загружен. Количество строк - %1", ТаблицаПрайсЛиста.Количество());
		Сообщение.Сообщить();
	Иначе
		Сообщить("Выбранный файл не содержит строк с ценами!");
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьИзТабличногоДокументаНаСервере()



&НаСервереБезКонтекста
Функция ПрочитатьФайл(АдресФайлаВХранилище)
	
	ТабДок = Новый ТабличныйДокумент;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Попытка
		ТабДок.Прочитать(ИмяВременногоФайла);
	Исключение
		ВызватьИсключение "Не удалость прочитать файл Excel в табличный документ!";
	КонецПопытки;
	
	Возврат ТабДок;

КонецФункции // ПрочитатьФайл()


&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок)
	
	ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы);
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента);
	Построитель.Выполнить();
	
	ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаПрайсЛиста;	
	
КонецФункции // ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса()




&НаСервереБезКонтекста
Процедура ЗагрузитьПрасЛист(ТаблицаПрайсЛиста, ДатаПрайсЛиста, ВидыЦенПродажи)


	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрайсЛиста.Номенклатура КАК Номенклатура,
	|	ТаблицаПрайсЛиста.Код КАК Код,
	|	ТаблицаПрайсЛиста.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
	|ИЗ
	|	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ном.Ссылка КАК Номенклатура,
	|	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена,
	|	Ном.ТипНоменклатуры КАК ТипНоменклатуры
	|ИЗ
	|	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|		ПО ВТ_ТаблицаПрайсЛиста.Номенклатура = Ном.Наименование
	|			И ВТ_ТаблицаПрайсЛиста.Код = Ном.Код";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат
	КонецЕсли;
	Выборка = Результат.Выбрать();
	
	
	Пока Выборка.Следующий() цикл 
		РегистрЦенНоменклатуры = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
		РегистрЦенНоменклатуры.Период = ДатаПрайсЛиста;
		РегистрЦенНоменклатуры.ВидЦены = ВидыЦенПродажи;
		ЗаполнитьЗначенияСвойств(РегистрЦенНоменклатуры, Выборка);
		РегистрЦенНоменклатуры.Записать();
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьПрасЛист()













