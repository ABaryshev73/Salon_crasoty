
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание")
		И ЗначениеЗаполнено(Параметры.Основание) Тогда 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияУслуги.Ссылка.Проведен КАК Проведен,
		|	РеализацияУслуги.Ссылка.ДокументОснование КАК ДокументОснование,
		|	РеализацияУслуги.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияУслуги.Ссылка.Дата КАК Дата
		|ИЗ
		|	Документ.Реализация.Услуги КАК РеализацияУслуги
		|ГДЕ
		|	РеализацияУслуги.Ссылка.ДокументОснование = &ДокументОснование";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Если Не Результат.Пустой() и Выборка.Проведен = Ложь Тогда 
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = 
			СтрШаблон("Документ ""Реализации товаров и услуг"" для данного заказа ""%1"" уже создан!", Объект.ДокументОснование);
			СообщениеПользователю.Сообщить();
			Отказ = Истина;
			Возврат;
			
		ИначеЕсли Не Результат.Пустой() И Выборка.Проведен Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = 
			СтрШаблон("Услуги для клиента ""%1"" на дату ""%2"" уже были обработаны!", Выборка.Контрагент, Выборка.Дата);
			СообщениеПользователю.Сообщить();
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
			
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры


&НаСервереБезКонтекста
Функция КонтрагентЭтоПокупатель(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка,
	|	Контрагенты.ТипКонтрагента КАК ТипКонтрагента
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если ЗначениеЗаполнено(Выборка.ТипКонтрагента) И
		Выборка.ТипКонтрагента = Перечисления.ТипыКонтрагентов.Клиент Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;
	
	
	
КонецФункции // КонтрагентЭтоПокупатель()



&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Договор.Видимость = КонтрагентЭтоПокупатель(Объект.Контрагент); 	
	
КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Процедура РассчетСуммыДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры // РассчетСуммыДокумента()



&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СтрокаТч = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();
КонецПроцедуры


&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СтрокаТч = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();
КонецПроцедуры


&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	СтрокаТч = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();
КонецПроцедуры


&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	СтрокаТч = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	СтрокаТч.Количество = 1;
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда 
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура, Объект.Дата);
	иначе
		СтрокаТЧ.Цена = 0;
	КонецЕсли;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();	
КонецПроцедуры 

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
		СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
		СтрокаТч.Количество = 1;
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда 
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Услуга, Объект.Дата);
	иначе
		СтрокаТЧ.Цена = 0;
	КонецЕсли;
	РаботаСТабличнымичастями.ПересчитатьСуммуВСтрокеТабЧасти(СтрокаТч);
	РассчетСуммыДокумента();

КонецПроцедуры



















































