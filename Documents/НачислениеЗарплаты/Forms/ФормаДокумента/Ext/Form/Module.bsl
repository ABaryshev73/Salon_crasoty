
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПериодНачисленияПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.Период КАК Период,
	|	КадроваяИсторияСотрудников.ГрафикРаботы КАК ГрафикРаботы,
	|	КадроваяИсторияСотрудников.Оклад КАК ПоказательРасчета,
	|	КадроваяИсторияСотрудников.Работает КАК Работает
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|ГДЕ
	|	КадроваяИсторияСотрудников.Работает = ИСТИНА";
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Объект.ПериодНачисления));
	
	РезЗапроса = Запрос.Выполнить();
	ТексСтр = РезЗапроса.Выгрузить();
	
	Объект.Начисления.Загрузить(ТексСтр);
	ДатаОкончанияПериода = КонецМесяца(Объект.ПериодНачисления);
	ДатаНачалаПериода = НачалоМесяца(Объект.ПериодНачисления);
	
	Для Каждого СтрокаТЧ Из Объект.Начисления Цикл 
		СтрокаТЧ.ВидРасчета = ПланыВидовРасчета.Начисления.Оклад;
		СтрокаТЧ.ДатаОкончания = ДатаОкончанияПериода;
		СтрокаТЧ.ДатаНачала = Макс(СтрокаТЧ.ДатаНачала, ДатаНачалаПериода);
	КонецЦикла;
	Объект.Начисления.Сортировать("Сотрудник");
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияПриИзменении(Элемент)
	ПериодНачисленияПриИзмененииНаСервере();
КонецПроцедуры
