

&НаСервере
Процедура ЗагрузитьВГрафикиПредприятияНаСервере()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиРаботыСотрудниковСписокДней.Дата КАК Дата,
	|	ГрафикиРаботыСотрудниковСписокДней.КоличествоЧасов КАК КоличествоЧасов,
	|	ГрафикиРаботыСотрудниковСписокДней.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГрафикиРаботыСотрудников.СписокДней КАК ГрафикиРаботыСотрудниковСписокДней
	|ГДЕ
	|	ГрафикиРаботыСотрудниковСписокДней.КоличествоЧасов > 0
	|	И ГрафикиРаботыСотрудниковСписокДней.Ссылка = &Ссылка";
	ДанныеГрафика = Запрос.Выполнить().Выгрузить();
	РегистрыСведений.ГрафикиРаботыПредприятия.ЗаполнитьГрафик(ДанныеГрафика);
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = СтрШаблон("График работы %1 успешно загружен.", Объект.Наименование);
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВГрафикиПредприятия(Команда)
	Если Объект.СписокДней.Количество() > 0 Тогда 
		ЗагрузитьВГрафикиПредприятияНаСервере();
	Иначе
		Сообщить("График работы не содеержит даных, сначала заполните график работы!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()

	ЭтоЦикличныйГрафик = Объект.СпособЗаполнения = 2;
	Элементы.ШагДней.Видимость = ЭтоЦикличныйГрафик;
	Элементы.НачалоГрафика.Видимость = ЭтоЦикличныйГрафик;

КонецПроцедуры // УправлениеВидимостью()

&НаКлиенте
Процедура СпособЗаполненияПриИзменении(Элемент)
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПериодаЗаполнения()

	Если ЗначениеЗаполнено(Объект.КонецПериода) И Объект.НачалоПериода > Объект.КонецПериода Тогда 
		 Сообщить("Начало периода не может быть больше окончания!");
		 Объект.КонецПериода = '00010101';
	 КонецЕсли;
	 
КонецПроцедуры // ПроверкаПериодаЗаполнения()


&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ПроверкаПериодаЗаполнения();
КонецПроцедуры


&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ПроверкаПериодаЗаполнения();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.НачалоПериода = '00010101' и Объект.КонецПериода = '00010101' Тогда 
		Объект.НачалоПериода = НачалоГода(ТекущаяДата());
		Объект.КонецПериода = КонецГода(ТекущаяДата());
	КонецЕсли;
	
	Если Объект.СпособЗаполнения = 0 Тогда 
		Объект.СпособЗаполнения =1;
	КонецЕсли;
	
	Если Объект.НачалоГрафика = 0 Тогда 
		Объект.НачалоГрафика  =1;
	КонецЕсли;
	
	УправлениеВидимостью();
КонецПроцедуры 


&НаКлиенте
Процедура ЗаполнитьГрафикПятидневки()

	СуткиВСекундах = 86400;
	ТекущийДень = Объект.НачалоПериода;
	
	Пока ТекущийДень <= Объект.КонецПериода Цикл 
		НоваяСтрока = Объект.СписокДней.Добавить();
		НоваяСтрока.Дата = ТекущийДень;
		
		ЭтоРабочаяДата = (ДеньНедели(ТекущийДень) < 6 И НеРабочиеДни(ТекущийДень)= Ложь) ИЛИ РабочиеДни(ТекущийДень)= Истина;
		
		Если ЭтоРабочаяДата Тогда 
			НоваяСтрока.КоличествоЧасов = Объект.КоличествоЧасов - КороткиеДни(ТекущийДень);
		КонецЕсли;
		
		ТекущийДень = ТекущийДень + СуткиВСекундах;
	КонецЦикла;
	
		

КонецПроцедуры // ЗаполнитьГрафикПятидневки()



&НаКлиенте
Процедура ЗаполнитьЦиклическийГрафик()

	СуткиВСекундах = 86400;
	ТекущийДень = Объект.НачалоПериода;
	
	Если Объект.НачалоГрафика = 1 Тогда
		ЭтоРабочийДень = Истина;
	Иначе 
		ЭтоРабочийДень = Ложь;
	КонецЕсли;
	
	Сч = 0;
	
	Пока ТекущийДень <= Объект.КонецПериода Цикл 
		НоваяСтрока = Объект.СписокДней.Добавить();
		НоваяСтрока.Дата = ТекущийДень;
		
		Если ЭтоРабочийДень Тогда 
			НоваяСтрока.КоличествоЧасов = Объект.КоличествоЧасов;
		КонецЕсли;
		
		Сч = Сч + 1;
		ТекущийДень = ТекущийДень + СуткиВСекундах;
		
		Если Сч % Объект.ШагДней = 0 Тогда 
			ЭтоРабочийДень = Не ЭтоРабочийДень;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьЦиклическийГрафик()

&НаКлиенте
Процедура ЗаполнитьГрафик(Команда)
	Объект.СписокДней.Очистить();
	
	Если Объект.СпособЗаполнения = 1 Тогда 
		ЗаполнитьГрафикПятидневки();
	ИначеЕсли 
		Объект.СпособЗаполнения = 2 Тогда 
		ЗаполнитьЦиклическийГрафик();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НеРабочиеДни(ЭтотДень)
	
	ЭтотГод = Год(Объект.НачалоПериода);
	Списоквыходных = Новый Массив;
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 01));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 02));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 03));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 04));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 05));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 06));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 07));
	Списоквыходных.Добавить(Дата(ЭтотГод, 01, 08));
	Списоквыходных.Добавить(Дата(ЭтотГод, 02, 23));
	Списоквыходных.Добавить(Дата(ЭтотГод, 03, 08));
	Списоквыходных.Добавить(Дата(ЭтотГод, 04, 29));
	Списоквыходных.Добавить(Дата(ЭтотГод, 04, 30));
	Списоквыходных.Добавить(Дата(ЭтотГод, 05, 01));
	Списоквыходных.Добавить(Дата(ЭтотГод, 05, 10));
	Списоквыходных.Добавить(Дата(ЭтотГод, 05, 09));
	Списоквыходных.Добавить(Дата(ЭтотГод, 11, 04));
	Списоквыходных.Добавить(Дата(ЭтотГод, 12, 30));
	Списоквыходных.Добавить(Дата(ЭтотГод, 12, 31));
	
	Индекс = Списоквыходных.Найти(ЭтотДень);
	
	Если Индекс = Неопределено Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // НеРабочиеДни()

&НаКлиенте
Функция КороткиеДни(ЭтотДень)
	
	ЭтотГод = Год(Объект.НачалоПериода);
	СписокКороткихДней = Новый Массив;
	СписокКороткихДней.Добавить(Дата(ЭтотГод, 02, 22));
	СписокКороткихДней.Добавить(Дата(ЭтотГод, 03, 07));
	СписокКороткихДней.Добавить(Дата(ЭтотГод, 05, 08));
	СписокКороткихДней.Добавить(Дата(ЭтотГод, 06, 11));
	СписокКороткихДней.Добавить(Дата(ЭтотГод, 11, 02));
	
	Индекс = СписокКороткихДней.Найти(ЭтотДень);
	
	Если Индекс = Неопределено Тогда 
		Возврат 0;
	Иначе 
		Возврат 1;
	КонецЕсли;

КонецФункции // КороткиеДни()

&НаКлиенте
Функция РабочиеДни(ЭтотДень)

	ЭтотГод = Год(Объект.НачалоПериода);
	СписокРабочихДней = Новый Массив;
	СписокРабочихДней.Добавить(Дата(ЭтотГод, 04, 27));
	СписокРабочихДней.Добавить(Дата(ЭтотГод, 11, 02));
	
   Индекс = СписокРабочихДней.Найти(ЭтотДень);
	
	Если Индекс = Неопределено Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;;
	


КонецФункции // РабочиеДни()































































